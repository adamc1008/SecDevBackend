name: SonarQube Backend Analysis

on:
  push:
    branches: [ main, dev, production ]
  pull_request:
    branches: [ production, dev, test ]
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests with coverage
        run: |
          python -m pytest tests/ --cov=. --cov-report=xml --cov-report=term-missing

      - name: Create sonar properties
        run: |
          cat > sonar-project.properties << 'EOL'
          sonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          sonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          sonar.projectName=LMS Backend
          sonar.sources=.
          sonar.tests=tests

          sonar.exclusions=**/venv/**,**/__pycache__/**,**/migrations/**
          sonar.test.inclusions=**/test_*.py
          sonar.python.coverage.reportPaths=coverage.xml
          sonar.sourceEncoding=UTF-8
          sonar.python.version=3.10
          EOL

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
